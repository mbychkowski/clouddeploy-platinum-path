##########################################################################################
# Permalink: https://gcpdraw.googleplex.com/diagrams/4c8cf23d-346d-4d4d-9726-242accf774cf
#
# This is the SECOND GCPDraw diagram for what I'm trying to achieve
# CB+CD+AR+GKE with canary deployment 90/10%
# pod splitting for app03
#
# Changelog:
# 202 v1.4 [BRANCHED] cat overal_diagram.gcpdraw | egrep -v "app02|app03" | sed -e s/app01/app03/g > diagram-app03.gcpdraw
# 2022-08-26 v1.3 Adding App03.. anzi no
# 2022-07-07 v1.2 Lighter colors, python/ruby icons.
# 2022-07-07 v1.1 Added the Backendservices to both Apps.
##########################################################################################
meta {
  title "Pod Balancing - Canary Pipeline GKE+CB+CD App03 v1.4"
}


elements {
  card users as developers {
    display_name "Developer"
  }
  card server as git {
    display_name "Multi-App repo"
  }

  gcp {
    card generic as csr {
      display_name "Cloud Source Repositories"
      name "Git Replication"
    }
    card build as build03 {
      name "Build Trigger App03"
      description "Build and Deploy"
    }
    card artifact_registry as repo
    #card deploy03 {
    #   # cloud deploy icon1
	#  icon_url "https://drive.google.com/file/d/10qBYxoKvZAhNJd_63eIk_jtkTUhEHJI7/view"
    #  name "Deploy App03"
    #}

   group gke_clusters {
      # Google blue for Clusters: 4c8bf5
      background_color "#e8f4f8" # super light

    card gke as dev_gke {
      name "Dev Cluster"
    }
    #card gke as canary_gke {
    #   name "Canary Cluster (unused)"
    #}
    #card gke as prod_gke {
    #  name "Prod Cluster"
    #}

    group prod_gke_cluster {
       name "Prod GKE Cluster"
       #display_name "boh aaa"
       icon_url "https://drive.google.com/file/d/1TdtWW0BeQCspKETqeGgZWOgy5lcpK9jI/view"
       #description "zoom 2"
      # Google blue for Clusters: 4c8bf5
      background_color "#e8f4f8" # super light

    card kubernetes as canary_pod1 {
      name "App03 Node pod1 (canary)"
    }
    card kubernetes as prod_pod2 {
      name "App03 Node pod2 (prod)"
    }
    card kubernetes as prod_pod3 {
      name "App03 Node pod2 (prod)"
    }
    card kubernetes as prod_pod4 {
      name "App03 Node pod2 (prod)"
    }
    card kubernetes as prod_pod5 {
      name "App03 Node pod2 (prod)"
    }
    card kubernetes as prod_kunode_service {
      name "App03 Service (prod+canary)"
    }

  } #/GKE Cluster group


  } #/GKE Cluster group



   # App03 Delivery Pipeline
   group app03_pipeline {
     name "App03 Delivery Pipeline"
     #DOESNT WORK title_color "#000000"
     #python is green
     #background_color "#1aa260" # Google green
     background_color "#bbfad3" # lighter-green
  	 icon_url "https://drive.google.com/file/d/1OnfYOGXM5JnwgDyssoeXIWQrfygTX7zQ/view"

    card dm_target as target_dev_app03 {
      name "Dev"
      icon_url "https://drive.google.com/file/d/10qBYxoKvZAhNJd_63eIk_jtkTUhEHJI7/view"
      display_name "target"
      #description "fyurther infolah"
    }
    card dm_target as target_staging_app03 {
      name "Staging"
      icon_url "https://drive.google.com/file/d/10qBYxoKvZAhNJd_63eIk_jtkTUhEHJI7/view"
      display_name "target"
      #description "fyurther infolah"
    }
    card dm_target as target_canary_app03 {
      name "Canary on Prod"
      icon_url "https://drive.google.com/file/d/10qBYxoKvZAhNJd_63eIk_jtkTUhEHJI7/view"
      display_name "target (NEW)"
      description "10% traffic"
    }
    card dm_target as target_prod_app03 {
      name "Production"
      icon_url "https://drive.google.com/file/d/10qBYxoKvZAhNJd_63eIk_jtkTUhEHJI7/view"
      display_name "target"
      description "90% traffic"
    }
   } #/App03 pipeline



  group solution2_GFE_TS {
#    background_color "#F4B400" # Google yellow
    background_color "#ffffe0" # Light yellow
    # this is solution 4 technically.
    name "Vanilla GKE Service + Pod Splitting"

    card kubernetes as app03_endpoint {
      name "http://1.2.3.4/"
   	  icon_url "https://drive.google.com/file/d/1OnfYOGXM5JnwgDyssoeXIWQrfygTX7zQ/view"
      description "kunode app Traffic Pod split: 20% Canary / 80% prod"

    }



  card users as app_user {
  }


  } #/Group solution2_GFE_TS


  } # end of GCP


  #card users as developers2 {
  #  display_name "Trigger"
  #}


}

paths {
  developers -down-> git
  git ..> csr
  csr --> build03

  # needed just to sort GKE from left to right
  dev_gke ..> prod_gke_cluster # prod_gke
  #canary_gke ..> prod_gke
  #build03 -down-> dev_gke
  #dev_gke <-down- qa
  build03 --> target_dev_app03
  #deploy03 -down-> prod_gke
  #deploy03 <-- developers2

  # Targets for app03
  target_dev_app03 --> target_staging_app03
  target_staging_app03 --> target_canary_app03
  target_canary_app03 --> target_prod_app03

  target_dev_app03 -down-> dev_gke
  target_staging_app03 -down-> dev_gke

  target_canary_app03 -down-> canary_pod1 # prod_gke

  target_prod_app03 -down-> prod_pod2 # prod_gke
target_prod_app03 -down-> prod_pod3 # prod_gke
target_prod_app03 -down-> prod_pod4 # prod_gke
target_prod_app03 -down-> prod_pod5 # prod_gke

  # Users consume Load Balancer endpoint.
  # its UGLY
  app03_endpoint <-- app_user

  # SOLUTION2: HTTP Envoy LB
  # canary deployment split traffic across canary/prod
  #target_canary_app03  <.. app03_bes_canary
  #app03_bes_canary  <-- app03_endpoint
  #target_prod_app03   <.. app03_bes_prod
  #app03_bes_prod
  prod_kunode_service <-- app03_endpoint

  canary_pod1 ..> prod_kunode_service
  prod_pod2 ..> prod_kunode_service
  prod_pod3 ..> prod_kunode_service
  prod_pod4 ..> prod_kunode_service
  prod_pod5 --> prod_kunode_service


}
