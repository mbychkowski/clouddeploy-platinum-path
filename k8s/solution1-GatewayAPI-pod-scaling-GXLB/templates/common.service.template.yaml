# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###########################################################
# This is a K8S template for Solution1 with some variables.
# You cant kubectl apply this or you'll get errors.
#
# Vars:
#  APP_NAME:         __APP_NAME__
#  PREFIX:           __PREFIX__
#  REGION:           __REGION__
#  K8S_APP_SELECTOR: __K8S_APP_SELECTOR__
# .. and so on. in general things with double underscore left and right as Im not a great sedder :)
###########################################################
apiVersion: v1
kind: Service
metadata:
  name: sol1sc-__PREFIX__-common-svc # dmarzi_was: store-common-svc
  annotations:
    cloud.google.com/neg: '{"exposed_ports": {"8080":{"name": ""}}}' # dmarzi_was: store-common-svc
    solution1-history: |
      TODO(Ricc): when this all works, restore the "platinum-app-id: __APP_NAME__"

      2022-08-16 V1.8 Moved back to SOL1D, anzi `sol1sc` (single cluster) to signify I learnt my lesson.
                      It was the right way I just forgot during vacay :)

      2022-08-15 V1.7 Moved sol1D to SOL1A (D is for Daniel/Dev) and A is for Automated. Also trying to use
                      gke-l7-gxlb-mc in the desperate hope it solves everything. Problem was, sol1 is intrinsically
                      single-cluster so, as is, can only be implemented in SC mode, which means that 4/4 and 1/1 pods
                      never become a 5/5 since you have 4stag in stag cluster and 1 prod in prod cluster. For an easy
                      fix, you can just use DEV where you have dev/staging.
      2022-07-21 V1.6 Moved everything from PROD/CANA to DEV cluster. Pre-hashtag-CanProd2Dev4debug
      2022-07-20 V1.5 Restored opinionated negs. Fixd the bug.
      2022-07-20 V1.4 Now selector is to lax and I can see app01/02 to be inside my balancer. This is GOOD but wrong
                      so I can now restrict to app id.
      2022-07-20 V1.3 fIXED Canary/Prod so all good.
spec:
  selector:
    #was: app: store
    # Both `App`` and `PlatinumAppId`` work. The first is easier to understand (lower cognitive load), while the latter
    # is less work on template part of things (wink wink Alex)
    app: __K8S_APP_SELECTOR__ # check on out/ if it works
    #platinum-app-id: __APP_NAME__ # => 'app01' or 'app02'
    #ricc-awesome-selector: canary-or-prod # DO NOT USE ssdev-or-staging EVER
    ricc-awesome-selector: dev-or-staging
  ports:
  - port: 8080
    targetPort: 8080
